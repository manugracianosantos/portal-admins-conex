generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "file:./dev.db"
}

model Admin {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  name          String
  photoUrl      String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  refreshTokens RefreshToken[]

  @@map("admins")
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  adminId   String
  expiresAt DateTime
  createdAt DateTime @default(now())
  admin     Admin    @relation(fields: [adminId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  name      String
  phone     String?
  photoUrl  String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  feedbacks Feedback[]
  services  Service[]

  @@map("users")
}

model Feedback {
  id        String   @id @default(uuid())
  userId    String
  rating    Int      @default(0)
  comment   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("feedbacks")
}

model Service {
  id          String    @id @default(uuid())
  userId      String
  title       String
  description String?
  status      String    @default("pending")
  completedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("services")
}
